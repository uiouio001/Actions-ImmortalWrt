#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
###############手动修改##############

name: Test Build

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      LAN_IP:
        description: 'Set LAN IP Address'
        required: true
        default: '192.168.1.1'
      SSH_TO_GITHUB_ACTIONS:
        description: 'SSH connection to Actions'
        required: false
        default: true
        type: boolean
#  schedule:
#    - cron: 0 16 * * *

env:
  ###############手动修改##############
  REPO_URL: https://github.com/uiouio/test
  REPO_BRANCH: main
  FEEDS_CONF: configs/feeds.conf.default
  CONFIG_FILE: configs/.config
  DIY_P1_SH: scripts/diy-part1.sh
  DIY_P2_SH: scripts/diy-part2.sh
  FREE_DISK_SH: scripts/free-disk-space.sh
  DEPENDS_SH: scripts/environment.sh
  CLASH_CORE_SH: scripts/preset-clash-core.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  OPENWRT_NAME: immortalwrt
  UPLOAD_TAG_NAME: mt7981-cmcc-rax3000m-emmc
  TZ: Asia/Shanghai
  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      actions: write
      contents: write

    steps:
    - name: 初始化阶段：检查项目分支
      uses: actions/checkout@main

    - name: 初始化阶段：设置编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq full-upgrade -y
        #chmod +x $DEPENDS_SH && $DEPENDS_SH
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-latest)
        sudo -E apt-get -qq install libfuse-dev libncurses5-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: 初始化阶段：设置编译环境
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "status=success" >> ${GITHUB_OUTPUT}
  
    - name: 准备阶段：是否允许通过SSH 连接到 Github Actions
      if: github.event.inputs.SSH_TO_GITHUB_ACTIONS == 'true'
      uses: uiouio//ssh2actions@main
      with:
        mode: ngrok
      env:
        # After sign up on the https://ngrok.com
        # You can find this token here: https://dashboard.ngrok.com/auth/your-authtoken
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
        
        # ngrok server region [us, eu, au, ap, sa, jp, in] (optional, default: us)
        # You can find this server region here: https://ngrok.com/docs#global-locations
        NGROK_REGION: us
    
        # This password you will use when authorizing via SSH
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
